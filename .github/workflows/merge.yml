name: Merge and Remove Duplicates from Files

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # Runs daily at UTC 0:00
  workflow_dispatch:

jobs:
  merge-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # 更新到最新版本
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment
        run: mkdir -p tmp && cd tmp

      - name: Download and process files
        run: |
          declare -A sources=(
            ["mosdns_adrules.txt"]="https://raw.githubusercontent.com/Cats-Team/AdRules/main/mosdns_adrules.txt|s/^domain://g"
            ["domains.txt"]="https://anti-ad.net/domains.txt|"
            ["dns.txt"]="https://raw.githubusercontent.com/8680/GOODBYEADS/master/data/rules/dns.txt|s/^\|\|//;s/\^$//"
            ["adblockdomain.txt"]="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdomain.txt|"
          )

          for file in "${!sources[@]}"; do
            url=$(echo "${sources[$file]}" | cut -d'|' -f1)
            filters=$(echo "${sources[$file]}" | cut -d'|' -f2-)
            
            echo "Processing $file from $url..."
            if ! curl -sSL "$url" -o "$file.raw"; then
              echo "Error: Failed to download $file" >&2
              exit 1
            fi
            
            # 如果 filters 为空，则只删除空行，否则应用指定的过滤规则
            if [ -z "$filters" ]; then
              sed '/^\s*$/d' "$file.raw" | grep -v '^[!#]' > "$file.processed"
            else
              sed "$filters" "$file.raw" | grep -v '^[!#]' > "$file.processed"
            fi
          done
        working-directory: tmp

      - name: Merge and deduplicate
        run: |
          cat *.processed | sort -u > ../domains.txt
          echo "Merged domains.txt generated with $(wc -l < ../domains.txt) unique lines."
        working-directory: tmp

      - name: Clean up temporary files
        if: always()  # 确保即使失败也执行清理
        run: rm -rf tmp

      - name: Commit changes
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add domains.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update merged domains file - $(date -u +%Y-%m-%d)"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Notify on failure
        if: failure()
        run: echo "Workflow failed. Check logs for details." >&2
