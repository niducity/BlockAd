name: Merge and Remove Duplicates from Files

on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # Runs daily at UTC 0:00
  workflow_dispatch:

jobs:
  merge-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up environment
        run: mkdir -p tmp && cd tmp

      - name: Download and process files
        run: |
          set -e  # 遇到错误立即退出
          set -o pipefail  # 确保管道中的失败被捕获
          
          declare -A sources=(
            ["mosdns_adrules.txt"]="https://raw.githubusercontent.com/Cats-Team/AdRules/main/mosdns_adrules.txt|s/^domain://g"
            ["domains.txt"]="https://anti-ad.net/domains.txt|"
            ["dns.txt"]="https://raw.githubusercontent.com/8680/GOODBYEADS/master/data/rules/dns.txt|s/^\|\|//;s/\^$//"
            ["adblockdomain.txt"]="https://raw.githubusercontent.com/217heidai/adblockfilters/main/rules/adblockdomainlite.txt|"
          )

          for file in "${!sources[@]}"; do
            url=$(echo "${sources[$file]}" | cut -d'|' -f1)
            filters=$(echo "${sources[$file]}" | cut -d'|' -f2-)
            
            echo "Processing $file from $url..."
            if ! curl -sSL "$url" -o "$file.raw"; then
              echo "Error: Failed to download $file from $url" >&2
              exit 1
            fi
            
            echo "Raw file downloaded. Size: $(wc -l < "$file.raw") lines"
            
            if [ -z "$filters" ]; then
              echo "Applying basic filter (remove empty lines)..."
              if ! sed '/^\s*$/d' "$file.raw" > "$file.temp"; then
                echo "Error: sed failed to remove empty lines for $file" >&2
                exit 1
              fi
            else
              echo "Applying custom filter: $filters..."
              if ! sed "$filters" "$file.raw" > "$file.temp"; then
                echo "Error: sed failed with filter '$filters' for $file" >&2
                head -n 10 "$file.raw" >&2
                exit 1
              fi
            fi
            
            echo "Applying grep filter for alphanumeric start..."
            # 使用 grep -E 并允许空输出
            grep -E '^[[:alnum:]]' "$file.temp" > "$file.processed" || true
            if [ ! -s "$file.processed" ]; then
              echo "Warning: No lines matched alphanumeric filter for $file" >&2
              head -n 10 "$file.temp" >&2
            fi
            
            rm -f "$file.temp"
            echo "Processed file. Size: $(wc -l < "$file.processed") lines"
          done
        working-directory: tmp

      - name: Merge and deduplicate
        run: |
          cat *.processed | sort -u > ../domains.txt
          echo "Merged domains.txt generated with $(wc -l < ../domains.txt) unique lines."
        working-directory: tmp

      - name: Clean up temporary files
        if: always()
        run: rm -rf tmp

      - name: Commit changes
        run: |
          git config user.email "action@github.com"
          git config user.name "GitHub Action"
          git add domains.txt
          if ! git diff --cached --quiet; then
            git commit -m "Update merged domains file - $(date -u +%Y-%m-%d)"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Notify on failure
        if: failure()
        run: echo "Workflow failed. Check logs for details." >&2
